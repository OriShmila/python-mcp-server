# ðŸŽ¯ TEMPLATE INSTRUCTIONS - Update these values for your MCP server
# 1. Replace "your-mcp-server" with your actual server name (use kebab-case)
# 2. Update version, description, and author info
# 3. Remove unused dependencies (httpx, python-dotenv if not needed)
# 4. Add your specific dependencies
# 5. Update the console script name to match your server name

[project]
name = "your-mcp-server"  # ðŸ‘ˆ REPLACE: Use kebab-case like "my-awesome-server"
version = "0.1.0"        # ðŸ‘ˆ UPDATE: Your version number
description = "Description of your MCP server functionality"  # ðŸ‘ˆ REPLACE: Describe what your server does
readme = "README.md"
requires-python = ">=3.11"

# ðŸ‘‡ REPLACE: Update dependencies for your actual requirements
dependencies = [
    "mcp>=1.6.0",  # âœ… KEEP: Always required for MCP servers
    # TODO: Remove the following if you don't need them:
    "httpx>=0.28.1",      # For HTTP requests - remove if not needed
    "python-dotenv>=1.0.0",  # For .env files - remove if not needed
    "jsonschema>=4.0.0",  # For schema validation - remove if not needed
    
    # TODO: Add your actual dependencies here:
    # "requests>=2.31.0",    # Alternative to httpx
    # "sqlite3",             # Database support
    # "pandas>=2.0.0",       # Data processing
    # "numpy>=1.24.0",       # Numerical computing
    # "beautifulsoup4>=4.12.0",  # HTML parsing
    # "aiofiles>=23.0.0",    # Async file operations
]

# ðŸ‘‡ REPLACE: Update script name to match your server
[project.scripts]
your-server = "mcp_server.__main__:main"  # ðŸ‘ˆ REPLACE: "your-server" with your command name

# Optional: Add more metadata
# [project.optional-dependencies]
# dev = [
#     "pytest>=7.0.0",
#     "black>=23.0.0", 
#     "ruff>=0.1.0",
# ]
#
# [project.urls]
# Homepage = "https://github.com/yourusername/your-mcp-server"
# Repository = "https://github.com/yourusername/your-mcp-server"
# Issues = "https://github.com/yourusername/your-mcp-server/issues"

[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["mcp_server"]
# Ensure non-Python data is included in the wheel
force-include = { "mcp_server/tools.json" = "mcp_server/tools.json" }

[tool.hatch.build.targets.sdist]
include = [
  "mcp_server/**",
  "README.md",
  "LICENSE",
]
